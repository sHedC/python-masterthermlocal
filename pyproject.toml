[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "masterthermlocal"
version = "0.0.0"
description = "Python 3 API wrapper for Mastertherm Local Bus"
readme = "README.md"
authors = [{ name = "Richard Holmes", email = "richard@shedc.uk" }]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = ["Mastertherm heatpump", "local", "client"]
dependencies = [
    "aiohttp>=3.12.2",
    "natsort>=8.4.0"
]
requires-python = ">=3.11,<3.14"

[project.optional-dependencies]
dev = ["black", "bumpver", "isort", "pip-tools", "pytest"]

[project.urls]
Homepage = "https://github.com/sHedC/python-masterthermlocal"

[project.scripts]
masterthermlocal = "masterthermlocal.__main__:main"

[tool.bumpver]
current_version = "0.0.0"
version_pattern = "MAJOR.MINOR.PATCH[-PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{pep440_version}"',
]
"masterthermlocal/__version__.py" = ["{pep440_version}"]

[tool.isort]
# Force imports to be sorted by module, independent of import type
force_sort_within_sections = true
# Group first party and local folder imports together
no_lines_before = ["LOCALFOLDER"]
# Configure isort to work without access to site-packages
known_first_party = ["mdformat", "tests"]
# Settings for Black compatibility
profile = "black"
line_length = 88
indent="    "

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"


[tool.mypy]
python_version = "3.13"
ignore_errors = true
follow_imports = "silent"
ignore_missing_imports = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true

show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
incremental = false
disallow_untyped_defs = true
check_untyped_defs = true
strict_equality = true
implicit_reexport = false
no_implicit_optional = true

[tool.tox]
requires = ["tox>=4.26"]
env_list = ["3.13", "3.12", "3.11"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
deps = ["-r requirements.txt"]
commands = [
    ["pytest", { replace = "posargs", default = ["--cov"], extend = true }],
]
